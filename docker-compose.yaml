version: '3'

services:
  backend-for-frontend:
    build:
      context: services/backend-for-frontend-${PROGRAMMING_LANGUAGE}
      dockerfile: Dockerfile
      platforms:
        # this is useful for pushing to Dockerhub, not for local builds
        - linux/amd64
        - linux/arm64
      cache_from:
        - ${IMAGE_REPO_USER}/backend-for-frontend-${PROGRAMMING_LANGUAGE}:${IMAGE_VERSION}
    image: ${IMAGE_REPO_USER}/backend-for-frontend-${PROGRAMMING_LANGUAGE}:${WORKSHOP_VERSION}
    ports:
      - "10115:10114" # Expose the port your Express app is listening on
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=https://api.honeycomb.io # US instance
      - OTEL_EXPORTER_OTLP_HEADERS=x-honeycomb-team=${HONEYCOMB_API_KEY}
      - OTEL_SERVICE_NAME=backend-for-frontend-${PROGRAMMING_LANGUAGE}

  meminator:
    build:
      context: services/meminator-${PROGRAMMING_LANGUAGE}
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
        - linux/arm64
      cache_from:
        - ${IMAGE_REPO_USER}/meminator-${PROGRAMMING_LANGUAGE}:${IMAGE_VERSION}
    image: ${IMAGE_REPO_USER}/meminator-${PROGRAMMING_LANGUAGE}:${WORKSHOP_VERSION}
    ports:
      - "10116:10114" # they can't be the same
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=https://api.honeycomb.io # US instance
      - OTEL_EXPORTER_OTLP_HEADERS=x-honeycomb-team=${HONEYCOMB_API_KEY}
      - OTEL_SERVICE_NAME=meminator-${PROGRAMMING_LANGUAGE}

  phrase-picker:
    build:
      context: services/phrase-picker-${PROGRAMMING_LANGUAGE}
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
        - linux/arm64
      cache_from:
        - ${IMAGE_REPO_USER}/phrase-picker-${PROGRAMMING_LANGUAGE}:${IMAGE_VERSION}
    image: ${IMAGE_REPO_USER}/phrase-picker-${PROGRAMMING_LANGUAGE}:${WORKSHOP_VERSION}
    ports:
      - "10117:10114" # the outer ports can't be the same
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=https://api.honeycomb.io # US instance
      - OTEL_EXPORTER_OTLP_HEADERS=x-honeycomb-team=${HONEYCOMB_API_KEY}
      - OTEL_SERVICE_NAME=phrase-picker-${PROGRAMMING_LANGUAGE}

  image-picker:
    build:
      context: services/image-picker-${PROGRAMMING_LANGUAGE}
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
        - linux/arm64
      cache_from:
        - ${IMAGE_REPO_USER}/image-picker-${PROGRAMMING_LANGUAGE}:${IMAGE_VERSION}
    image: ${IMAGE_REPO_USER}/image-picker-${PROGRAMMING_LANGUAGE}:${WORKSHOP_VERSION}
    ports:
      - "10118:10114" # the outer ports can't be the same
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=https://api.honeycomb.io # US instance
      - OTEL_EXPORTER_OTLP_HEADERS=x-honeycomb-team=${HONEYCOMB_API_KEY}
      - OTEL_SERVICE_NAME=image-picker-${PROGRAMMING_LANGUAGE}

  web:
    build:
      context: services/web
      dockerfile: Dockerfile
      args:
        HONEYCOMB_API_KEY: ${HONEYCOMB_API_KEY}
      platforms:
        - linux/amd64
        - linux/arm64
      cache_from:
        - ${IMAGE_REPO_USER}/web:${IMAGE_VERSION}
    image: ${IMAGE_REPO_USER}/web:${WORKSHOP_VERSION}
    # volumes: # uncomment this for faster development on the frontend
    #   - ./services/web/dist:/usr/share/nginx/html # Mount directory containing static files -- only do this for development
    ports:
      - "8080:80" # Expose port 8080 for Nginx
